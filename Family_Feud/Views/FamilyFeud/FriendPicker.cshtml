
@{
    Layout = null;
}

<!DOCTYPE html>
<!--http://localhost:50392/FamilyFeud/FamilyPicker-->
<html>
<head>
    @Styles.Render("~/Content/DavidsStyles")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/bootstrap")
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <meta name="viewport" content="width=device-width" />
    <title>FriendPicker</title>
    <style>
        html, body {
            width: 100%;
            height: 100%;
            font: 32px/1.4 georgia, serif;
            letter-spacing: 0;
        }

        #curved1 {
            position: absolute;
            top: 32px;
            left: 0;
            width: 400px;
        }

        #curved2 {
            position: absolute;
            top: 32px;
            left: 400px;
            width: 400px;
        }

    </style>
</head>
<body class="fullPage">
    <div style="text-align:center">
        <div id="curved2">Here is a small arc</div>
        <div id="curved1">Here is some curved text that goes all the way around.</div>
        <h1 style="color:yellow; font-size:100px; font-weight:bolder">Friend Picker</h1>
        <h6 style="color:yellow ">Not Family</h6>
    </div>
        <div style="text-align:center; width:65%;" class="container">
            <div class="row">
                <div style="text-align:left" class="col-md-5">
                    <h1 style="color:yellow">Team 1</h1>
                    <p><input placeholder="Enter Team Name" id="team1" class="form-control" style="height:100px; width:2000px;"/></p>
                    @*<table  id ="team1Table" class="table table-bordered ">
                    </table>*@
                </div>
                <div style="text-align:left" class="col-md-offset-7">
                    <h1 style="color:yellow">Team 2</h1>
                    <p><input placeholder="Enter Team Name" id="team2" class="form-control" style="height:100px; width:2000px; font-size:30px;"/></p>
                    @*<table id ="team2Table" class="table table-bordered col-md-5">                    
                    </table>*@
                </div>
            </div>
            <div class="row">
                <button id="startButton" class="btn btn-primary" >Start Game</button>
            </div>
        </div>      
</body>
</html>
<script>

    $("#startButton").on('click', function () {
        var team1 = $("#team1").val();
        var team2 = $("#team2").val();

        window.location.href = "/FamilyFeud/DavidsGameBoard?team1=" + team1 + "&team2=" + team2;

    });

    /*
 * CircleType 0.34
 * Peter Hrynkow
 * Copyright 2013, Licensed GPL & MIT
 *
*/

    $.fn.circleType = function (options) {

        var settings = {
            dir: 1,
            position: 'relative'
        };
        if (typeof ($.fn.lettering) !== 'function') {
            console.log('Lettering.js is required');
            return;
        }
        return this.each(function () {

            if (options) {
                $.extend(settings, options);
            }
            var elem = this,
                delta = (180 / Math.PI),
                ch = parseInt($(elem).css('line-height'), 10),
                fs = parseInt($(elem).css('font-size'), 10),
                txt = elem.innerHTML.replace(/^\s+|\s+$/g, '').replace(/\s/g, '&nbsp;'),
                letters,
                center;

            elem.innerHTML = txt
            $(elem).lettering();

            elem.style.position = settings.position;

            letters = elem.getElementsByTagName('span');
            center = Math.floor(letters.length / 2)

            var layout = function () {
                var tw = 0,
                    i,
                    offset = 0,
                    minRadius,
                    origin,
                    innerRadius,
                    l, style, r, transform;

                for (i = 0; i < letters.length; i++) {
                    tw += letters[i].offsetWidth;
                }
                minRadius = (tw / Math.PI) / 2 + ch;

                if (settings.fluid && !settings.fitText) {
                    settings.radius = Math.max(elem.offsetWidth / 2, minRadius);
                }
                else if (!settings.radius) {
                    settings.radius = minRadius;
                }

                if (settings.dir === -1) {
                    origin = 'center ' + (-settings.radius + ch) / fs + 'em';
                } else {
                    origin = 'center ' + settings.radius / fs + 'em';
                }

                innerRadius = settings.radius - ch;

                for (i = 0; i < letters.length; i++) {
                    l = letters[i];
                    offset += l.offsetWidth / 2 / innerRadius * delta;
                    l.rot = offset;
                    offset += l.offsetWidth / 2 / innerRadius * delta;
                }
                for (i = 0; i < letters.length; i++) {
                    l = letters[i]
                    style = l.style
                    r = (-offset * settings.dir / 2) + l.rot * settings.dir
                    transform = 'rotate(' + r + 'deg)';

                    style.position = 'absolute';
                    style.left = '50%';
                    style.marginLeft = -(l.offsetWidth / 2) / fs + 'em';

                    style.webkitTransform = transform;
                    style.MozTransform = transform;
                    style.OTransform = transform;
                    style.msTransform = transform;
                    style.transform = transform;

                    style.webkitTransformOrigin = origin;
                    style.MozTransformOrigin = origin;
                    style.OTransformOrigin = origin;
                    style.msTransformOrigin = origin;
                    style.transformOrigin = origin;
                    if (settings.dir === -1) {
                        style.bottom = 0;
                    }
                }

                if (settings.fitText) {
                    if (typeof ($.fn.fitText) !== 'function') {
                        console.log('FitText.js is required when using the fitText option');
                    } else {
                        $(elem).fitText();
                        $(window).resize(function () {
                            updateHeight();
                        });
                    }
                }
                updateHeight();
            };

            var getBounds = function (elem) {
                var docElem = document.documentElement,
                    box = elem.getBoundingClientRect();
                return {
                    top: box.top + window.pageYOffset - docElem.clientTop,
                    left: box.left + window.pageXOffset - docElem.clientLeft,
                    height: box.height
                };
            };

            var updateHeight = function () {
                var mid = getBounds(letters[center]),
                    first = getBounds(letters[0]),
                    h;
                if (mid.top < first.top) {
                    h = first.top - mid.top + first.height;
                } else {
                    h = mid.top - first.top + first.height;
                }
                elem.style.height = h + 'px';
            }

            if (settings.fluid && !settings.fitText) {
                $(window).resize(function () {
                    layout();
                });
            }

            if (document.readyState !== "complete") {
                elem.style.visibility = 'hidden';
                $(window).load(function () {
                    elem.style.visibility = 'visible';
                    layout();
                });
            } else {
                layout();
            }
        });
    };








    $('#curved1').circleType({ position: 'absolute' });
    $('#curved2').circleType({ position: 'absolute', dir: 1, radius: 200 });
    ////  appends 5 player rows to both of the team tables
    //for (var i = 0; i < 5; i++){
    //    var playerNumber = ["1", "2", "3", "4", "5"];
    //    var team1PlayerIds = ["1P1", "1P2", "1P3", "1P4", "1P5"];
    //    var team2PlayerIds = ["2P1", "2P2", "2P3", "2P4", "2P5"];
    //    var team1PlayerRow =
    //        '<tr>' +
    //        '<td>Player '+ playerNumber[i] +'</td>' +
    //        '<td><input id="team'+ team1PlayerIds[i] +'" placeholder="Enter Player\'s Name" class="form-control" /></td>' +
    //        '</tr>';
    //    var team2PlayerRow =
    //        '<tr>' +
    //        '<td>Player ' + playerNumber[i] + '</td>' +
    //        '<td><input id="team' + team2PlayerIds[i] + '" placeholder="Enter Player\'s Name" class="form-control" /></td>' +
    //        '</tr>';
    //    $("#team1Table").append(team1PlayerRow);
    //    $("#team2Table").append(team2PlayerRow);
    //}

    //  highlights table row on mouse over
    $('tr').hover(function () {
        $(this).toggleClass('.test');
      
    });
</script>